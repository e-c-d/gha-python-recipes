name: Build SQLCipher against Python libraries
on: [push]

jobs:
  sqlcipher:
    name: Build SQLCipher
    env:
      PYTHON: "C:/hostedtoolcache/windows/Python/3.13.3/x64/python.exe"
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4

      - id: cache-downloads-restore
        uses: actions/cache/restore@v4
        with:
          path: dl
          key: download-sqlcipher-7

      - name: download
        shell: sh
        run: |
          ./python.sh builder.py download_sqlcipher

      - uses: actions/cache/save@v4
        with:
          path: dl
          key: ${{ steps.cache-downloads-restore.outputs.cache-primary-key }}

      - name: Build fake deps
        shell: sh
        run: |
          ./python.sh builder.py fake_compile_openssl

      - name: Build SQLCipher
        shell: sh
        run: |
          ./python.sh builder.py build_sqlcipher

      - name: Assemble outputs
        shell: sh
        run: |
          ./python.sh builder.py assemble_sqlcipher

      - name: Upload SQLCipher build
        uses: actions/upload-artifact@v4
        with:
          name: sqlcipher
          path: sqlcipher-final

      - name: Build TCL
        if: ${{ false }}
        shell: pwsh
        run: |
          . ./main.ps1

          Enter-CompilerEnvironment

          Invoke-MkdirP tcl
          $tcl = Resolve-LiteralPathForced "tcl"
          & tar -C tcl --strip-components=1 -xf dl/tcl.tar.gz

          cd tcl/win
          & nmake -f makefile.vc release "INSTALLDIR=$tcl"
          & nmake -f makefile.vc install "INSTALLDIR=$tcl"

          # Get-ChildItem -LiteralPath $tcl -Recurse

      - name: Run SQLCipher tests
        if: ${{ false }}
        shell: pwsh
        run: |
          . ./main.ps1

          $tcl = Resolve-LiteralPathForced "tcl"

          Enter-CompilerEnvironment

          cd sqlcipher
          $opts = (Prepare-CompileSQLCipher "..")
          # & nmake /f makefile.msc tclextension-install TCLDIR=$tcl @opts

          try {
            & nmake /f makefile.msc testfixture.exe      TCLDIR=$tcl @opts
          } catch {
            "oh well"
          }

          Get-ChildItem -LiteralPath "." -Recurse -Include @(".exe", ".dll")

          & ./testfixture.exe test/sqlcipher.test
